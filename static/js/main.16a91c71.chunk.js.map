{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","dist","to","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutTitle","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","backgroundColor","onChange","event","target","rows","disabled","length","newText","toUpperCase","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","navigator","clipboard","writeText","split","join","filter","element","About","myStyle","aria-labelledby","data-bs-parent","defaultProps","App","setMode","document","body","react_router_dist","path","exact","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.16a91c71.chunk.js","sourcesContent":["// ****---- Navbar Component ----**** //\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    // ****---- Navigation Section ----**** //\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      {/* Title and Nav-Item Button Section */}\r\n      <div className=\"container-fluid\">\r\n        <Link to=\"/TextUtils\" className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/home\" className=\"nav-link\" aria-current=\"page\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                {props.aboutTitle}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n\r\n          {/* Dark Mode Toggler Section */}\r\n\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n              className=\"form-check-label\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n// ****---- Prop-Type Declaration Section ----**** //\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutTitle: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set Your Title\",\r\n  aboutTitle: \"Set About Title\",\r\n};\r\n","// ****---- Text Form Section Component ----**** //\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  // ****---- Function Declaration Section ----**** //\r\n  const handleOnClick = (event) => {\r\n    setText(\"\");\r\n  };\r\n\r\n  const handleUpClick = () => {\r\n    // console.log(\"UpperCase button was clicked: \" + text);\r\n\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n  const handleLoClick = () => {\r\n    // console.log(\"LowerCase button was clicked: \" + text);\r\n\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n  const handleClearClick = () => {\r\n    // console.log(\"LowerCase button was clicked: \" + text);\r\n\r\n    let newText = \"\";\r\n    setText(newText);\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"handleOnChange\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const speak = () => {\r\n    let msg = new SpeechSynthesisUtterance();\r\n    msg.text = text;\r\n    window.speechSynthesis.speak(msg);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n  };\r\n\r\n  const [text, setText] = useState(\"Enter text here...\");\r\n\r\n  //   text=\"nex text\"    // Wrong Way to change the state\r\n  //   setText(nex text);     //  Correct Way to change the state\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"rgb(43 63 79)\",\r\n        }}\r\n      >\r\n        {/* Text-Area Section */}\r\n        <h2 className=\"mb-2\">{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            style={{\r\n              backgroundColor:\r\n                props.mode === \"dark\" ? \"rgb(64 94 117)\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"rgb(43 63 79)\",\r\n            }}\r\n            id=\"myBox\"\r\n            onChange={handleOnChange}\r\n            onClick={handleOnClick}\r\n            rows=\"4\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        {/* Buttons Section */}\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert To Uppercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleLoClick}\r\n        >\r\n          Convert To Lowercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear Text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          type=\"submit\"\r\n          onClick={speak}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n        >\r\n          Speak\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleCopy}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-1 my-1\"\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Remove extra spaces\r\n        </button>\r\n      </div>\r\n\r\n      {/* Summary - Preview Section */}\r\n      <div\r\n        className=\"container my-3 \"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"rgb(43 63 79)\",\r\n        }}\r\n      >\r\n        <h3>Your Text Summary</h3>\r\n        <p>\r\n          <b>\r\n            {\r\n              // Regular Expression from JavaScript\r\n              text.split(/\\s+/).filter((element) => {\r\n                return element.length !== 0;\r\n              }).length\r\n            }\r\n          </b>{\" \"}\r\n          words and <b>{text.length}</b> characters\r\n        </p>\r\n        <p>\r\n          <b>\r\n            {0.008 *\r\n              text.split(\" \").filter((element) => {\r\n                return element.length !== 0;\r\n              }).length}\r\n          </b>{\" \"}\r\n          Minutes to read\r\n        </p>\r\n        <h3>Preview Your Text</h3>\r\n        <p>\r\n          <i>{text.length > 0 ? text : \"Nothing to Preview\"}</i>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// ****---- About Us Component ----**** //\r\n\r\nimport React from \"react\";\r\n\r\nexport default function About(props) {\r\n  // ****---- Function Declaration Section ----**** //\r\n  // const [myStyle, setMyStyle] = useState({\r\n  //   color: \"rgb(43 63 79)\",\r\n  //   backgroundColor: \"white\",\r\n  // });\r\n  let myStyle = {\r\n    color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n    backgroundColor: props.mode === \"dark\" ? \"rgb(64 94 117)\" : \"white\",\r\n  };\r\n\r\n  // ****---- toggleStyle functions & btnText State used for in-page Dark Mode Button (Not needed now) ----**** //\r\n  // const [btnText, setBtnText] = useState(\"Enable Dark mode\");\r\n  // const toggleStyle = () => {\r\n  //   if (myStyle.color === \"rgb(43 63 79)\") {\r\n  //     setMyStyle({\r\n  //       color: \"white\",\r\n  //       backgroundColor: \"rgb(43 63 79)\",\r\n  //       border: \"1px solid white\",\r\n  //     });\r\n  //     setBtnText(\"Enable Light Mode\");\r\n  //   } else {\r\n  //     setMyStyle({\r\n  //       color: \"rgb(43 63 79)\",\r\n  //       backgroundColor: \"white\",\r\n  //     });\r\n  //     setBtnText(\"Enable Dark Mode\");\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        {/* Accordion Section */}\r\n        <h2>About TextUtils</h2>\r\n\r\n        <div>\r\n          <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\">\r\n              <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button\r\n                  className=\"accordion-button\"\r\n                  type=\"button\"\r\n                  data-bs-toggle=\"collapse\"\r\n                  data-bs-target=\"#collapseOne\"\r\n                  aria-expanded=\"true\"\r\n                  aria-controls=\"collapseOne\"\r\n                  style={myStyle}\r\n                >\r\n                  <strong>Analyze Your Text</strong>\r\n                </button>\r\n              </h2>\r\n              <div\r\n                id=\"collapseOne\"\r\n                className=\"accordion-collapse collapse show\"\r\n                aria-labelledby=\"headingOne\"\r\n                data-bs-parent=\"#accordionExample\"\r\n              >\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                  TextUtils gives you a way to analyze your text quickly and\r\n                  efficiently. Be it word count, character count, preview of\r\n                  analyzed text, its a complete and a handy tool{\" \"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n              <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button\r\n                  className=\"accordion-button collapsed\"\r\n                  type=\"button\"\r\n                  data-bs-toggle=\"collapse\"\r\n                  data-bs-target=\"#collapseTwo\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseTwo\"\r\n                  style={myStyle}\r\n                >\r\n                  <strong>Free to use</strong>\r\n                </button>\r\n              </h2>\r\n              <div\r\n                id=\"collapseTwo\"\r\n                className=\"accordion-collapse collapse\"\r\n                aria-labelledby=\"headingTwo\"\r\n                data-bs-parent=\"#accordionExample\"\r\n              >\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                  TextUtils is a free character counter tool that provides\r\n                  instant character count & word count statistics for a given\r\n                  text. Text Utils reports the number of words and characters.\r\n                  Thus it is sustainable for writing text with word/character\r\n                  limit.\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n              <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button\r\n                  className=\"accordion-button collapsed\"\r\n                  type=\"button\"\r\n                  data-bs-toggle=\"collapse\"\r\n                  data-bs-target=\"#collapseThree\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseThree\"\r\n                  style={myStyle}\r\n                >\r\n                  <strong>Browser Compatible</strong>\r\n                </button>\r\n              </h2>\r\n              <div\r\n                id=\"collapseThree\"\r\n                className=\"accordion-collapse collapse\"\r\n                aria-labelledby=\"headingThree\"\r\n                data-bs-parent=\"#accordionExample\"\r\n              >\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                  This word counter software works in any web browser such as\r\n                  Chrome, Firefox, Internet Explorer, Safari and Opera. It suits\r\n                  to count characters in facebook, blog, books, excel document,\r\n                  pdf document, essay, ets.\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* In-Page Dark Mode Toggle Button (Not needed anymore) Section */}\r\n\r\n          {/* <div className=\"container\">\r\n            <button\r\n              onClick={toggleStyle}\r\n              type=\"button\"\r\n              className=\"btn btn-primary my-3\"\r\n            >\r\n              {btnText}\r\n            </button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// ****---- This Main App Js File ----**** //\n\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from \"react\";\n\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// let name = \"Morpheus\";\n// let name = prompt(\"Please write your Name\");\n\nfunction App() {\n  // ****---- Function Declaration Section ----**** //\n\n  const [mode, setMode] = useState(\"light\"); //Whether Dark mode enable or not\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"rgb(43 63 79)\";\n      // document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      // document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return (\n    <>\n      {/* Component Declaration and Calling Section */}\n      <Router>\n        <Navbar\n          title=\"TextUtils\"\n          aboutTitle=\"About Us\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n\n        <div className=\"container my-3\">\n          <Routes>\n            <Route\n              path=\"/TextUtils\"\n              element={\n                <TextForm\n                  heading=\"TextUtils - Word Counter, Character Counter, Remove Extra Spaces\"\n                  mode={mode}\n                />\n              }\n            ></Route>\n            <Route\n              path=\"/home\"\n              element={\n                <TextForm\n                  heading=\"TextUtils - Word Counter, Character Counter, Remove Extra Spaces\"\n                  mode={mode}\n                />\n              }\n            ></Route>\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <TextForm\n                  heading=\"TextUtils - Word Counter, Character Counter, Remove Extra Spaces\"\n                  mode={mode}\n                />\n              }\n            ></Route>\n            <Route exact path=\"about\" element={<About mode={mode} />} />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}