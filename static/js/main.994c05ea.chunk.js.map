{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","dist","to","aria-current","aboutTitle","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","document","getElementById","select","navigator","clipboard","writeText","split","join","length","About","myStyle","setMyStyle","_useState3","_useState4","btnText","setBtnText","aria-labelledby","data-bs-parent","border","defaultProps","App","setMode","body","react_router_dist","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.994c05ea.chunk.js","sourcesContent":["// ****---- Navbar Component ----**** //\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    // ****---- Navigation Section ----**** //\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      {/* Title and Nav-Item Button Section */}\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link active\" aria-current=\"page\">\r\n                Home\r\n              </Link>\r\n              {/* <a to=\"/\" className=\"nav-link active\" aria-current=\"page\">\r\n                Home\r\n              </a> */}\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                {props.aboutTitle}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n\r\n          {/* Dark Mode Toggler Section */}\r\n\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n              className=\"form-check-label\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n// ****---- Prop-Type Declaration Section ----**** //\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutTitle: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set Your Title\",\r\n  aboutTitle: \"Set About Title\",\r\n};\r\n","// ****---- Text Form Section Component ----**** //\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  // ****---- Function Declaration Section ----**** //\r\n  const handleOnClick = (event) => {\r\n    setText(\"\");\r\n  };\r\n\r\n  const handleUpClick = () => {\r\n    // console.log(\"UpperCase button was clicked: \" + text);\r\n\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n  const handleLoClick = () => {\r\n    // console.log(\"LowerCase button was clicked: \" + text);\r\n\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n  const handleClearClick = () => {\r\n    // console.log(\"LowerCase button was clicked: \" + text);\r\n\r\n    let newText = \"\";\r\n    setText(newText);\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"handleOnChange\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const speak = () => {\r\n    let msg = new SpeechSynthesisUtterance();\r\n    msg.text = text;\r\n    window.speechSynthesis.speak(msg);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n  };\r\n\r\n  const [text, setText] = useState(\"Enter text here...\");\r\n\r\n  //   text=\"nex text\"    // Wrong Way to change the state\r\n  //   setText(nex text);     //  Correct Way to change the state\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n        }}\r\n      >\r\n        {/* Text-Area Section */}\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n            id=\"myBox\"\r\n            onChange={handleOnChange}\r\n            onClick={handleOnClick}\r\n            rows=\"4\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        {/* Buttons Section */}\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n          Convert To Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>\r\n          Convert To Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>\r\n          Clear Text\r\n        </button>\r\n        <button type=\"submit\" onClick={speak} className=\"btn btn-primary mx-=1\">\r\n          Speak\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>\r\n          Remove extra spaces\r\n        </button>\r\n      </div>\r\n\r\n      {/* Summary - Preview Section */}\r\n      <div\r\n        className=\"container my-3 \"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n        }}\r\n      >\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          <b>{text.split(\" \").length}</b> words and <b>{text.length}</b>{\" \"}\r\n          characters\r\n        </p>\r\n        <p>\r\n          <b>{0.008 * text.split(\" \").length}</b> Minutes to read\r\n        </p>\r\n        <h2>Preview Your Text</h2>\r\n        <p>\r\n          <i>\r\n            {text.length > 0\r\n              ? text\r\n              : \"Enter Something in the Text-box for Preview\"}\r\n          </i>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// ****---- About Us Component ----**** //\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n  // ****---- Function Declaration Section ----**** //\r\n  const [myStyle, setMyStyle] = useState({\r\n    color: \"#042743\",\r\n    backgroundColor: \"white\",\r\n  });\r\n  const [btnText, setBtnText] = useState(\"Enable Dark mode\");\r\n  const toggleStyle = () => {\r\n    if (myStyle.color === \"#042743\") {\r\n      setMyStyle({\r\n        color: \"white\",\r\n        backgroundColor: \"#042743\",\r\n        border: \"1px solid white\",\r\n      });\r\n      setBtnText(\"Enable Light Mode\");\r\n    } else {\r\n      setMyStyle({\r\n        color: \"#042743\",\r\n        backgroundColor: \"white\",\r\n      });\r\n      setBtnText(\"Enable Dark Mode\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={myStyle}>\r\n        {/* Accordion Section */}\r\n        <h1>About Us</h1>\r\n\r\n        <div>\r\n          <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\">\r\n              <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button\r\n                  className=\"accordion-button\"\r\n                  type=\"button\"\r\n                  data-bs-toggle=\"collapse\"\r\n                  data-bs-target=\"#collapseOne\"\r\n                  aria-expanded=\"true\"\r\n                  aria-controls=\"collapseOne\"\r\n                  style={myStyle}\r\n                >\r\n                  Accordion Item #1\r\n                </button>\r\n              </h2>\r\n              <div\r\n                id=\"collapseOne\"\r\n                className=\"accordion-collapse collapse show\"\r\n                aria-labelledby=\"headingOne\"\r\n                data-bs-parent=\"#accordionExample\"\r\n              >\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                  <strong>This is the first item's accordion body.</strong> It\r\n                  is shown by default, until the collapse plugin adds the\r\n                  appropriate classes that we use to style each element. These\r\n                  classes control the overall appearance, as well as the showing\r\n                  and hiding via CSS transitions. You can modify any of this\r\n                  with custom CSS or overriding our default variables. It's also\r\n                  worth noting that just about any HTML can go within the{\" \"}\r\n                  <code>.accordion-body</code>, though the transition does limit\r\n                  overflow.\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n              <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button\r\n                  className=\"accordion-button collapsed\"\r\n                  type=\"button\"\r\n                  data-bs-toggle=\"collapse\"\r\n                  data-bs-target=\"#collapseTwo\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseTwo\"\r\n                  style={myStyle}\r\n                >\r\n                  Accordion Item #2\r\n                </button>\r\n              </h2>\r\n              <div\r\n                id=\"collapseTwo\"\r\n                className=\"accordion-collapse collapse\"\r\n                aria-labelledby=\"headingTwo\"\r\n                data-bs-parent=\"#accordionExample\"\r\n              >\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                  <strong>This is the second item's accordion body.</strong> It\r\n                  is hidden by default, until the collapse plugin adds the\r\n                  appropriate classes that we use to style each element. These\r\n                  classes control the overall appearance, as well as the showing\r\n                  and hiding via CSS transitions. You can modify any of this\r\n                  with custom CSS or overriding our default variables. It's also\r\n                  worth noting that just about any HTML can go within the{\" \"}\r\n                  <code>.accordion-body</code>, though the transition does limit\r\n                  overflow.\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n              <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button\r\n                  className=\"accordion-button collapsed\"\r\n                  type=\"button\"\r\n                  data-bs-toggle=\"collapse\"\r\n                  data-bs-target=\"#collapseThree\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseThree\"\r\n                  style={myStyle}\r\n                >\r\n                  Accordion Item #3\r\n                </button>\r\n              </h2>\r\n              <div\r\n                id=\"collapseThree\"\r\n                className=\"accordion-collapse collapse\"\r\n                aria-labelledby=\"headingThree\"\r\n                data-bs-parent=\"#accordionExample\"\r\n              >\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                  <strong>This is the third item's accordion body.</strong> It\r\n                  is hidden by default, until the collapse plugin adds the\r\n                  appropriate classes that we use to style each element. These\r\n                  classes control the overall appearance, as well as the showing\r\n                  and hiding via CSS transitions. You can modify any of this\r\n                  with custom CSS or overriding our default variables. It's also\r\n                  worth noting that just about any HTML can go within the{\" \"}\r\n                  <code>.accordion-body</code>, though the transition does limit\r\n                  overflow.\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Dark Mode Toggle Button Section */}\r\n          <div className=\"container\">\r\n            <button\r\n              onClick={toggleStyle}\r\n              type=\"button\"\r\n              className=\"btn btn-primary my-3\"\r\n            >\r\n              {btnText}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// ****---- This Main App Js File ----**** //\n\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from \"react\";\n\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// let name = \"Morpheus\";\n// let name = prompt(\"Please write your Name\");\n\nfunction App() {\n  // ****---- Function Declaration Section ----**** //\n\n  const [mode, setMode] = useState(\"light\"); //Whether Dark mode enable or not\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"grey\";\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return (\n    <>\n      {/* Component Declaration and Calling Section */}\n      <Router>\n        <Navbar\n          title=\"TextUtils\"\n          aboutTitle=\"About Us\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n\n        <div className=\"container my-3\">\n          <Routes>\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <TextForm\n                  heading=\"Enter the text to analyze below\"\n                  mode={mode}\n                />\n              }\n            ></Route>\n            <Route exact path=\"about\" element={<About />} />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}